image: docker:latest

services:
  - name: docker:dind
    command: ["--registry-mirror", "https://docker-proxy.industrysoftware.automation.siemens.com"]

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_AUTH_CONFIG: $DOCKER_AUTH_CONFIG
  GITLAB_REGISTRY: "gitlab.industrysoftware.automation.siemens.com:4567"
  GIT_USERNAME: $GIT_USERNAME
  GIT_TOKEN: $GIT_TOKEN

  # GitLab SSH Keys for authentication
  SSH_PRIVATE_KEY_GITLAB_BASE64: $SSH_PRIVATE_KEY_GITLAB_BASE64
  KNOWN_HOSTS_GITLAB: $KNOWN_HOSTS_GITLAB

  CD_REPO_USER_NAME: $CD_REPO_USER_NAME
  CD_REPO_USER_EMAIL: $CD_REPO_USER_EMAIL

  # Docker image details
  DOCKER_IMAGE: "$HARBOR_URL/$HARBOR_PROJECT/$IMAGE_NAME"
  DOCKER_TAG: "latest"

stages:
  - test
  - build

before_script:
  - echo "Starting GitLab CI/CD Pipeline for Flask App"

test:
  stage: test
  image: python:3.11
  script:
    - pip install -r requirements.txt
#    - pytest  # Ensure tests are available in the repo
  tags:
    - docker

build:
  stage: build
  image: docker:latest
  script:
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh

    # Configure GitLab SSH access
    - echo "$KNOWN_HOSTS_GITLAB" > ~/.ssh/known_hosts
    - echo "$SSH_PRIVATE_KEY_GITLAB_BASE64" | base64 -d > ~/.ssh/id_rsa_gitlab
    - chmod 400 ~/.ssh/id_rsa_gitlab
    - echo -e "Host gitlab.industrysoftware.automation.siemens.com\n\tHostName gitlab.industrysoftware.automation.siemens.com\n\tIdentityFile ~/.ssh/id_rsa_gitlab\n" > ~/.ssh/config
    - chmod 400 ~/.ssh/config
    - echo "DISPLAYinfo"
    - echo "$HARBOR_USERNAME"
    - echo "${HARBOR_PASSWORD}"
    
    # Docker login
    - echo "$HARBOR_PASSWORD" | docker login $HARBOR_URL -u "$HARBOR_USERNAME" --password-stdin

    # Build and push image to Harbor
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHA .
    - docker tag $DOCKER_IMAGE:$CI_COMMIT_SHA $DOCKER_IMAGE:latest
    - docker push $DOCKER_IMAGE:latest
  tags:
    - docker

